give_deviant_secret_or_trait_effect = {
	carn_give_deviant_secret_or_trait_no_fetish_effect = yes
	carn_add_random_fetish_effect = yes
}

add_adulterer_trait_or_nothing_effect = {
	save_scope_as = adulterer_check
	if = {
		limit = {
			is_married = yes
			trait_is_shunned_or_criminal_in_my_or_lieges_faith_trigger = { TRAIT = adulterer GENDER_CHARACTER = scope:adulterer_check }
			carn_should_have_no_consequences_for_extramarital_sex_trigger = no
			#AGOT Added, paramour checks, aithnea to do verify these
			trigger_if = {
				limit = { exists = scope:sex_partner }
				NOT = { has_relation_paramour = scope:sex_partner }
			}
			trigger_if = {
				limit = { exists = pregnancy_real_father }
				NOT = { has_relation_paramour = pregnancy_real_father }
			}
			trigger_if = {
				limit = { exists = scope:mother }
				NOT = { has_relation_paramour = scope:mother }
			}
		}
		add_trait_force_tooltip = adulterer
	}
}

add_fornicator_trait_or_nothing_effect = {
	save_scope_as = fornicator_check
	if = {
		limit = {
			is_adult = yes
			is_married = no
			trait_is_shunned_or_criminal_in_my_or_lieges_faith_trigger = { TRAIT = fornicator GENDER_CHARACTER = scope:fornicator_check }
			carn_should_have_no_consequences_for_extramarital_sex_trigger = no
			#AGOT Added, paramour checks, aithnea to do verify these
			trigger_if = {
				limit = { exists = scope:sex_partner }
				NOT = { has_relation_paramour = scope:sex_partner }
			}
			trigger_if = {
				limit = { exists = pregnancy_real_father }
				NOT = { has_relation_paramour = pregnancy_real_father }
			}
			trigger_if = {
				limit = { exists = scope:mother }
				NOT = { has_relation_paramour = scope:mother }
			}
		}
		add_trait_force_tooltip = fornicator
	}
}

remove_piety_level_for_shunned_or_criminal_trait_effect = {
	save_temporary_scope_as = piety_character
	save_temporary_scope_value_as = {
		name = shunned_trait_check
		value = flag:$TRAIT$
	}
	if = {
		limit = {
			OR = {
				trait_is_shunned_in_faith_trigger = { TRAIT = $TRAIT$ FAITH = scope:piety_character.faith GENDER_CHARACTER = scope:piety_character }
				trait_is_criminal_in_faith_trigger = { TRAIT = $TRAIT$ FAITH = scope:piety_character.faith GENDER_CHARACTER = scope:piety_character }
			}
			NAND = {
				OR = {
					scope:shunned_trait_check = flag:adulterer
					scope:shunned_trait_check = flag:fornicator
				}
				carn_should_have_no_consequences_for_extramarital_sex_trigger = yes
			}
		}
		add_piety_level = -1

		# LEGITIMACY LOSS FROM CRIME EXPOSURE
		if = {
			limit = {
				is_valid_for_legitimacy_change = yes
				NOT = { exists = scope:suppress_legitimacy_from_crime }
			}
			if = {
				limit = {
					trait_is_shunned_in_faith_trigger = { TRAIT = $TRAIT$ FAITH = scope:piety_character.faith GENDER_CHARACTER = scope:piety_character }
				}
				add_legitimacy = minor_legitimacy_loss
			}
			else = { add_legitimacy = medium_legitimacy_loss }
			# Flag that we might not always want to apply future legitimacy losses down the line.
			save_scope_value_as = {
				name = suppress_legitimacy_from_crime
				value = yes
			}
		}
	}
}

# Creates a story about confrontations/choices after discovered infidelity (lover secret discovery)
start_infidelity_confrontation_story_discovery_effect = {
	if = {
		limit = {
			NOR = {
				$DISCOVERER$ = $LOVER_2$
				$DISCOVERER$ = $LOVER_1$
			}
			$DISCOVERER$ = {
				OR = {
					has_relation_lover = $LOVER_1$
					is_spouse_of = $LOVER_1$
					has_relation_lover = $LOVER_2$
					is_spouse_of = $LOVER_2$
				}
			}
			NOR = {
				$LOVER_1$ = {
					any_owned_story = {
						story_type = story_cycle_infidelty_confronter
						var:lover_2 = $LOVER_2$ #var:lover_2 is the secret target i.e. the other person
					}
				}
				$LOVER_2$ = {
					any_owned_story = {
						story_type = story_cycle_infidelty_confronter
						var:lover_2 = $LOVER_1$ #var:lover_2 is the secret target i.e. the other person
					}
				}
			}
			#Exempt marriages to polyamorous spouses.
			NOR = {
				$LOVER_1$ = {
					OR = {
						any_spouse = {
							count = all
							faith = { has_doctrine_parameter = no_unfaithfulness_penalty_active }
						}
						has_character_flag = block_infidelity_flag
					}
				}
				$LOVER_1$ = {
					carn_should_have_no_consequences_for_extramarital_sex_with_partner_trigger = {
						PARTNER = $LOVER_2$
					}
				}
				$LOVER_2$ = {
					OR = {
						any_spouse = {
							count = all
							faith = { has_doctrine_parameter = no_unfaithfulness_penalty_active }
						}
						has_character_flag = block_infidelity_flag
					}
				}
				$LOVER_2$ = {
					carn_should_have_no_consequences_for_extramarital_sex_with_partner_trigger = {
						PARTNER = $LOVER_1$
					}
				}
			}
		}
		infidelity_confrontation_story_creation_effect = { LOVER_1 = $LOVER_1$ LOVER_2 = $LOVER_2$ }
		scope:infidelity_story = {
			add_to_variable_list = {
				name = confronting_partners
				target = $DISCOVERER$
			}
		}
		#Certain changes to desc in event if the secret was revealed through investigation
		if = {
			limit = { $DISCOVERER$ = { is_ai = no } } #Text changes are only relevant to players

			#Save the secrets so we can check them
			$LOVER_1$ = {
				random_secret = {
					limit = {
						secret_type = secret_lover
						secret_target = $LOVER_2$
					}
					add_to_temporary_list = secrets_for_desc
				}
			}
			$LOVER_2$ = {
				random_secret = {
					limit = {
						secret_type = secret_lover
						secret_target = $LOVER_1$
					}
					add_to_temporary_list = secrets_for_desc
				}
			}

			#infidelity_confrontation_1000_investigation_desc
			if = {
				limit = {
					any_in_list = {
						list = secrets_for_desc
						exists = var:revealed_through_investigation_by_desc
						var:revealed_through_investigation_by_desc = $DISCOVERER$
					}
				}
				scope:infidelity_story = {
					set_variable = {
						name = infidelity_confrontation_1000_investigation_desc
						value = yes
					}
				}
			}

			#revealed_through_confession_to_desc
			if = {
				limit = {
					any_in_list = {
						list = secrets_for_desc
						exists = var:revealed_through_confession_to_desc
						var:revealed_through_confession_to_desc = $DISCOVERER$
					}
				}
				scope:infidelity_story = {
					set_variable = {
						name = infidelity_confrontation_1000_confession_desc
						value = yes
					}
				}
			}
		}
	}
}
